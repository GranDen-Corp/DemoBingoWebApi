// <auto-generated />
using System;
using GranDen.Game.ApiLib.Bingo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BingoDb.Migrations.Migrations
{
    [DbContext(typeof(BingoGameDbContext))]
    partial class BingoGameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.Bingo2dGameInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BingoPlayerInfoPlayerId")
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("I18nDisplayKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxHeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxWidth")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BingoPlayerInfoPlayerId");

                    b.HasIndex("GameName")
                        .IsUnique();

                    b.ToTable("Bingo2dGameInfos");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.BingoPlayerInfo", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("Bingo2dGameInfoId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("Bingo2dGameInfoId");

                    b.ToTable("BingoPlayerInfos");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.BingoPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BelongingGameId")
                        .HasColumnType("int");

                    b.Property<string>("BelongingPlayerPlayerId")
                        .HasColumnType("varchar(128)");

                    b.Property<DateTimeOffset?>("ClearTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("BelongingGameId");

                    b.HasIndex("BelongingPlayerPlayerId");

                    b.ToTable("BingoPoints");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.MappingGeoPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GeoPointId")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("GeoPointRedirected")
                        .HasColumnType("bit");

                    b.Property<string>("RedirectedGeoPointId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeoPointId")
                        .IsUnique();

                    b.ToTable("MappingGeoPoints");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.PointProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BingoPlayerInfoPlayerId")
                        .HasColumnType("varchar(128)");

                    b.Property<int>("BingoPointFk")
                        .HasColumnType("int");

                    b.Property<int?>("MappingGeoPointId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BingoPlayerInfoPlayerId");

                    b.HasIndex("BingoPointFk")
                        .IsUnique();

                    b.HasIndex("MappingGeoPointId");

                    b.ToTable("PointProjection");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.Bingo2dGameInfo", b =>
                {
                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.BingoPlayerInfo", null)
                        .WithMany("JoinedGames")
                        .HasForeignKey("BingoPlayerInfoPlayerId");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.BingoPlayerInfo", b =>
                {
                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.Bingo2dGameInfo", null)
                        .WithMany("JoinedPlayers")
                        .HasForeignKey("Bingo2dGameInfoId");
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.BingoPoint", b =>
                {
                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.Bingo2dGameInfo", "BelongingGame")
                        .WithMany("BingoPoints")
                        .HasForeignKey("BelongingGameId");

                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.BingoPlayerInfo", "BelongingPlayer")
                        .WithMany()
                        .HasForeignKey("BelongingPlayerPlayerId");

                    b.OwnsOne("GranDen.GameLib.Bingo.MarkPoint2D", "MarkPoint", b1 =>
                        {
                            b1.Property<int>("BingoPointId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("Marked")
                                .HasColumnName("Marked")
                                .HasColumnType("bit");

                            b1.Property<int>("X")
                                .HasColumnName("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnName("Y")
                                .HasColumnType("int");

                            b1.HasKey("BingoPointId");

                            b1.ToTable("BingoPoints");

                            b1.WithOwner()
                                .HasForeignKey("BingoPointId");
                        });
                });

            modelBuilder.Entity("GranDen.Game.ApiLib.Bingo.Models.PointProjection", b =>
                {
                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.BingoPlayerInfo", "BingoPlayerInfo")
                        .WithMany()
                        .HasForeignKey("BingoPlayerInfoPlayerId");

                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.BingoPoint", "BingoPoint")
                        .WithOne("PointProjection")
                        .HasForeignKey("GranDen.Game.ApiLib.Bingo.Models.PointProjection", "BingoPointFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GranDen.Game.ApiLib.Bingo.Models.MappingGeoPoint", "MappingGeoPoint")
                        .WithMany("PointProjections")
                        .HasForeignKey("MappingGeoPointId");
                });
#pragma warning restore 612, 618
        }
    }
}
